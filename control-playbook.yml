---
- hosts: all
  become: true

  tasks:
  - name: "Update hosts file"
    lineinfile:
      path: /etc/hosts
      line: '{{ item }}'
    with_items:
      - '{{ node_ip }} control'
      - '10.10.1.11 worker-1'
      - '10.10.1.12 worker-2'
      - '10.10.1.13 worker-3'

  - name: Make sure group wheel is not in the sudoers configuration
    lineinfile:
      path: /etc/hosts
      state: absent
      regexp: '^127.0.1.1'

  - name: Install packages that allow apt to be used over HTTPS
    apt:
      name:
        - apt-transport-https
        - ca-certificates
        - curl
        - gnupg-agent
        - software-properties-common
      state: present
      update_cache: yes

  - name: Add an apt signing key for HELM
    apt_key:
      url: https://baltocdn.com/helm/signing.asc
      state: present

  - name: Add apt repository for HELM version
    apt_repository:
      repo: deb https://baltocdn.com/helm/stable/debian/ all main
      state: present

  - name: Enable kernel modules
    lineinfile:
      create: yes
      path: /etc/modules-load.d/containerd.conf
      line: '{{ item }}'
    with_items:
      - 'overlay'
      - 'br_netfilter'

  - name: Add modules
    community.general.modprobe:
      name: '{{ item }}'
      state: present
    with_items:
      - 'overlay'
      - 'br_netfilter'

  - name: Add sysctl lines
    lineinfile:
      create: yes
      path: /etc/sysctl.d/kubernetes.conf
      line: '{{ item }}'
    with_items:
      - 'net.bridge.bridge-nf-call-ip6tables = 1'
      - 'net.bridge.bridge-nf-call-iptables  = 1'
      - 'net.ipv4.ip_forward = 1'

  - name: Run sysctl
    ansible.builtin.shell: sysctl --system >/dev/null 2>&1

  - name: Create a directory if it does not exist
    ansible.builtin.file:
      path: /etc/containerd
      state: directory
      mode: '0755'

  - name: Install containerd
    apt:
      name:
        - containerd
      state: present
      update_cache: yes
    notify:
      - containerd status

  - name: Configure containerd
    ansible.builtin.shell: containerd config default | tee /etc/containerd/config.toml

  - name: sed line in containerd config
    ansible.builtin.shell: sed -i 's/SystemdCgroup \= false/SystemdCgroup \= true/g' /etc/containerd/config.toml

  - name: Restart containerd
    service:
      name: containerd
      daemon_reload: yes
      state: restarted

  - name: Disable swap
    command: swapoff -a

  - name: Add an apt signing key for Kubernetes
    apt_key:
      url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
      state: present

  - name: Adding apt repository for Kubernetes
    apt_repository:
      repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
      state: present
      filename: kubernetes.list

  - name: Install Kubernetes binaries
    apt:
      name:
        - kubelet={{ k8s_version }}-00
        - kubeadm={{ k8s_version }}-00
        - kubectl={{ k8s_version }}-00
        - helm
        - etcd-client
      state: present
      update_cache: yes
    register: installed

  - name: Configure KUBELET_EXTRA_ARGS
    copy:
      dest: /etc/default/kubelet
      content: KUBELET_EXTRA_ARGS=" --node-ip={{ node_ip }} "
      mode: 0755

  - name: Restart kubelet
    service:
      name: kubelet
      daemon_reload: yes
      state: restarted

  - name: Initialize the Kubernetes cluster using kubeadm
    command: kubeadm init --apiserver-advertise-address="{{ node_ip }}" --apiserver-cert-extra-sans="{{ node_ip }}"  --node-name control --pod-network-cidr=192.168.0.0/16
    when: installed is changed

  - name: Create .kube folder
    become: false
    file:
      path: /home/vagrant/.kube
      state: directory

  - name: Copy admin.conf file
    copy:
      src: /etc/kubernetes/admin.conf
      dest: /home/vagrant/.kube/config
      remote_src: True

  - name: Change admin.conf owner
    file:
      path: /home/vagrant/.kube/config
      owner: vagrant
      group: vagrant
      mode: 0400

  - name: Install calico pod network
    become: false
    command: kubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml

  - name: Bash autocompletion
    become: false
    shell: kubectl completion bash >> ~/.bashrc

  - name: Generate join command
    shell: kubeadm token create --print-join-command 2>/dev/null > /tmp/join
    register: join_command

  - name: Copy join command to local file
    fetch:
      src: /tmp/join
      dest: /tmp/join
      remote_src: yes
      flat: True

  handlers:
    - name: containerd status
      service:
        name: containerd
        state: started
